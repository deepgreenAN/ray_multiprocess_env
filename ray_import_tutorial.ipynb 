{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"ray_import_tutorial.ipynb ","provenance":[],"collapsed_sections":[],"toc_visible":true,"authorship_tag":"ABX9TyPFGheHsiKG46sijPQLN5wl"},"kernelspec":{"name":"python3","display_name":"Python 3"}},"cells":[{"cell_type":"markdown","metadata":{"id":"qJJfHCtlwctP"},"source":["# rayのimportについて"]},{"cell_type":"markdown","metadata":{"id":"5JRydUlgwouc"},"source":["rayをjupyterで利用する場合に，インポートがとても面倒だったのでまとめておく．"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"qwwp4OWygvOa","executionInfo":{"status":"ok","timestamp":1611881240593,"user_tz":-540,"elapsed":31589,"user":{"displayName":"Naoto Asami","photoUrl":"","userId":"02738946460850472304"}},"outputId":"6b28cc3c-6e98-4776-c79f-c1779550e7e0"},"source":["from google.colab import drive\r\n","drive.mount('/content/gdrive')"],"execution_count":1,"outputs":[{"output_type":"stream","text":["Mounted at /content/gdrive\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"_KvsLsFchKll","executionInfo":{"status":"ok","timestamp":1611881244986,"user_tz":-540,"elapsed":829,"user":{"displayName":"Naoto Asami","photoUrl":"","userId":"02738946460850472304"}}},"source":["import sys"],"execution_count":2,"outputs":[]},{"cell_type":"code","metadata":{"id":"IIgCKco9hU4I","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1611881269907,"user_tz":-540,"elapsed":23997,"user":{"displayName":"Naoto Asami","photoUrl":"","userId":"02738946460850472304"}},"outputId":"c8d6d8bc-332c-4ea0-9c42-f5869eda73e4"},"source":["!pip install -q ray"],"execution_count":3,"outputs":[{"output_type":"stream","text":["\u001b[K     |████████████████████████████████| 48.5MB 88kB/s \n","\u001b[K     |████████████████████████████████| 1.3MB 40.3MB/s \n","\u001b[K     |████████████████████████████████| 71kB 6.1MB/s \n","\u001b[K     |████████████████████████████████| 81kB 5.7MB/s \n","\u001b[K     |████████████████████████████████| 133kB 37.2MB/s \n","\u001b[K     |████████████████████████████████| 3.2MB 35.5MB/s \n","\u001b[K     |████████████████████████████████| 204kB 33.1MB/s \n","\u001b[K     |████████████████████████████████| 81kB 7.1MB/s \n","\u001b[K     |████████████████████████████████| 296kB 43.6MB/s \n","\u001b[K     |████████████████████████████████| 143kB 46.0MB/s \n","\u001b[K     |████████████████████████████████| 61kB 5.6MB/s \n","\u001b[K     |████████████████████████████████| 102kB 8.8MB/s \n","\u001b[?25h  Building wheel for gpustat (setup.py) ... \u001b[?25l\u001b[?25hdone\n","  Building wheel for idna-ssl (setup.py) ... \u001b[?25l\u001b[?25hdone\n","  Building wheel for contextvars (setup.py) ... \u001b[?25l\u001b[?25hdone\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"XJD9CuKhG3q9","executionInfo":{"status":"ok","timestamp":1611881279352,"user_tz":-540,"elapsed":687,"user":{"displayName":"Naoto Asami","photoUrl":"","userId":"02738946460850472304"}}},"source":["import sys\r\n","sys.path.append(\"/content/gdrive/MyDrive/ray_multiprocess_env\")"],"execution_count":4,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"emgo1poLKhkm"},"source":["### rayの初期化"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"MhN71AfIKgh0","executionInfo":{"status":"ok","timestamp":1611881287143,"user_tz":-540,"elapsed":5404,"user":{"displayName":"Naoto Asami","photoUrl":"","userId":"02738946460850472304"}},"outputId":"466df92c-b1ea-4861-c077-120a958f136b"},"source":["import ray\r\n","ray.init(num_cpus=10)"],"execution_count":5,"outputs":[{"output_type":"stream","text":["2021-01-29 00:48:02,875\tINFO services.py:1173 -- View the Ray dashboard at \u001b[1m\u001b[32mhttp://127.0.0.1:8265\u001b[39m\u001b[22m\n"],"name":"stderr"},{"output_type":"execute_result","data":{"text/plain":["{'metrics_export_port': 61551,\n"," 'node_id': '21fec1093eed6d9dd7b7a911066bb51a241e7095',\n"," 'node_ip_address': '172.28.0.2',\n"," 'object_store_address': '/tmp/ray/session_2021-01-29_00-48-02_221844_63/sockets/plasma_store',\n"," 'raylet_ip_address': '172.28.0.2',\n"," 'raylet_socket_name': '/tmp/ray/session_2021-01-29_00-48-02_221844_63/sockets/raylet',\n"," 'redis_address': '172.28.0.2:6379',\n"," 'session_dir': '/tmp/ray/session_2021-01-29_00-48-02_221844_63',\n"," 'webui_url': '127.0.0.1:8265'}"]},"metadata":{"tags":[]},"execution_count":5}]},{"cell_type":"markdown","metadata":{"id":"pRihWLe4Ence"},"source":["ここで，identiti_funcは普通にmulti_process_funcs.pyで定義された関数であり、identiti_func2はさらに別のファイルで定義された関数を参照している．SimpleEnvScriptは後述するSimpleEnvをファイルに定義したものである．"]},{"cell_type":"code","metadata":{"id":"IeKSYne0HD7l","executionInfo":{"status":"ok","timestamp":1611881290943,"user_tz":-540,"elapsed":750,"user":{"displayName":"Naoto Asami","photoUrl":"","userId":"02738946460850472304"}}},"source":["from multi_process_funcs import identiti_func, identiti_func2, SimpleEnvScript"],"execution_count":6,"outputs":[]},{"cell_type":"code","metadata":{"id":"KpmE_88ZkZcA","executionInfo":{"status":"ok","timestamp":1611881292726,"user_tz":-540,"elapsed":848,"user":{"displayName":"Naoto Asami","photoUrl":"","userId":"02738946460850472304"}}},"source":["import numpy as np"],"execution_count":7,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"p7pZdwQvGp40"},"source":["### メイン(jupyter)で定義する関数"]},{"cell_type":"markdown","metadata":{"id":"bDMzw8OEG9AV"},"source":["identiti_func3は普通に定義したもので，identiti_func4はインポートした関数を参照している．"]},{"cell_type":"code","metadata":{"id":"p0DLCUymH-IG","executionInfo":{"status":"ok","timestamp":1611881296365,"user_tz":-540,"elapsed":826,"user":{"displayName":"Naoto Asami","photoUrl":"","userId":"02738946460850472304"}}},"source":["def identiti_func3(x):\r\n","    return x"],"execution_count":8,"outputs":[]},{"cell_type":"code","metadata":{"id":"mMxqqMWKz7BK","executionInfo":{"status":"ok","timestamp":1611881298221,"user_tz":-540,"elapsed":797,"user":{"displayName":"Naoto Asami","photoUrl":"","userId":"02738946460850472304"}}},"source":["def identiti_func4_without_import(x):\r\n","    return identiti_func(x)\r\n","\r\n","def identiti_func4_with_import(x):\r\n","    import sys\r\n","    sys.path.append(\"/content/gdrive/MyDrive/ray_multiprocess_env\")\r\n","    import multi_process_funcs\r\n","    from multi_process_funcs import identiti_func\r\n","\r\n","    return identiti_func(x)"],"execution_count":9,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"kXj8J46oIb3e"},"source":["### 単純な環境クラス"]},{"cell_type":"markdown","metadata":{"id":"eD7HK3vsLYRi"},"source":["#### 通所のクラス定義"]},{"cell_type":"markdown","metadata":{"id":"2UC7K1RgLfO_"},"source":["クラス内部でインポート等は何もしないふつうのクラス"]},{"cell_type":"code","metadata":{"id":"cg9lFIrbkeyV","executionInfo":{"status":"ok","timestamp":1611881303308,"user_tz":-540,"elapsed":646,"user":{"displayName":"Naoto Asami","photoUrl":"","userId":"02738946460850472304"}}},"source":["class SimpleEnv():\r\n","    def __init__(self):\r\n","        self.init_number = None\r\n","\r\n","    def reset(self):\r\n","        self.init_number = np.random.randint(0,100, size=(1,))\r\n","        return identiti_func4_without_import(identiti_func3(identiti_func2(identiti_func(self.init_number))))\r\n","\r\n","    def step(self, action):\r\n","        self.init_number += action\r\n","        return self.init_number, 0, False, None "],"execution_count":10,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"iCT3d9ioMOuO"},"source":["### 関数の開始時にimportしたクラス定義"]},{"cell_type":"markdown","metadata":{"id":"UER3bLtLMfsb"},"source":["関数の開始時に内部で利用するすべてのモジュール・関数をすべてインポートしている． SimpleEnv2では，jupyter内定義関数においてimporを行う\r\n","identiti_func4_with_importを利用している．"]},{"cell_type":"code","metadata":{"id":"E54pokKkyAqS","executionInfo":{"status":"ok","timestamp":1611881323078,"user_tz":-540,"elapsed":799,"user":{"displayName":"Naoto Asami","photoUrl":"","userId":"02738946460850472304"}}},"source":["class SimpleEnv2():\r\n","    def __init__(self):\r\n","        self.init_number = None\r\n","\r\n","    def reset(self):\r\n","        import numpy as np\r\n","        import sys\r\n","        sys.path.append(\"/content/gdrive/MyDrive/ray_multiprocess_env\")\r\n","        import multi_process_funcs\r\n","        from multi_process_funcs import identiti_func, identiti_func2\r\n","\r\n","        self.init_number = np.random.randint(0,100, size=(1,))\r\n","        return identiti_func4_with_import(identiti_func3(identiti_func2(identiti_func(self.init_number))))\r\n","\r\n","    def step(self, action):\r\n","        self.init_number += action\r\n","        return self.init_number, 0, False, None "],"execution_count":11,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Wrra0oQDlnsH","executionInfo":{"status":"ok","timestamp":1611881325473,"user_tz":-540,"elapsed":1085,"user":{"displayName":"Naoto Asami","photoUrl":"","userId":"02738946460850472304"}},"outputId":"4215ebbd-70b8-44c4-c4b4-7ec08ec3c377"},"source":["simple_env = SimpleEnv()\r\n","simple_env.reset()"],"execution_count":12,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([74])"]},"metadata":{"tags":[]},"execution_count":12}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"uvYr3f4plt1D","executionInfo":{"status":"ok","timestamp":1611881327692,"user_tz":-540,"elapsed":852,"user":{"displayName":"Naoto Asami","photoUrl":"","userId":"02738946460850472304"}},"outputId":"fcada0f2-0436-4669-f5f1-0e1fcfd0a651"},"source":["simple_env.step(5)"],"execution_count":13,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(array([79]), 0, False, None)"]},"metadata":{"tags":[]},"execution_count":13}]},{"cell_type":"markdown","metadata":{"id":"z9he6RAen6RN"},"source":["### 環境のリモート化"]},{"cell_type":"markdown","metadata":{"id":"GS5oPVazIDRA"},"source":["#### 1.普通にray.remoteのデコレート\r\n","RaySimpleEnvはray.remoteをクラスの定義にデコレートしたクラスである．クラスの定義はSimpleEnvと同じように，特殊なimportはしていない．"]},{"cell_type":"code","metadata":{"id":"s4oO_dZ7Nb-W","executionInfo":{"status":"ok","timestamp":1611881334087,"user_tz":-540,"elapsed":630,"user":{"displayName":"Naoto Asami","photoUrl":"","userId":"02738946460850472304"}}},"source":["@ray.remote\r\n","class RaySimpleEnv():\r\n","    def __init__(self):\r\n","        self.init_number = None\r\n","\r\n","    def reset(self):\r\n","    \r\n","        self.init_number = np.random.randint(0,100, size=(1,))\r\n","        return identiti_func4_without_import(identiti_func3(identiti_func2(identiti_func(self.init_number))))\r\n","\r\n","    def step(self, action):\r\n","        self.init_number += action\r\n","        return self.init_number, 0, False, None "],"execution_count":14,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"cTL8DXb-NwIP","executionInfo":{"status":"ok","timestamp":1611881336235,"user_tz":-540,"elapsed":786,"user":{"displayName":"Naoto Asami","photoUrl":"","userId":"02738946460850472304"}},"outputId":"cd1acc52-8537-45c3-efac-00414dd80049"},"source":["remote_env = RaySimpleEnv.remote()"],"execution_count":15,"outputs":[{"output_type":"stream","text":["2021-01-29 00:48:55,778\tWARNING worker.py:1034 -- Failed to unpickle actor class 'RaySimpleEnv' for actor ID df5a1a8201000000. Traceback:\n","Traceback (most recent call last):\n","  File \"/usr/local/lib/python3.6/dist-packages/ray/function_manager.py\", line 496, in _load_actor_class_from_gcs\n","    actor_class = pickle.loads(pickled_class)\n","ModuleNotFoundError: No module named 'multi_process_funcs'\n","\n","\u001b[2m\u001b[36m(pid=389)\u001b[0m 2021-01-29 00:48:55,767\tERROR function_manager.py:498 -- Failed to load actor class RaySimpleEnv.\n","\u001b[2m\u001b[36m(pid=389)\u001b[0m Traceback (most recent call last):\n","\u001b[2m\u001b[36m(pid=389)\u001b[0m   File \"/usr/local/lib/python3.6/dist-packages/ray/function_manager.py\", line 496, in _load_actor_class_from_gcs\n","\u001b[2m\u001b[36m(pid=389)\u001b[0m     actor_class = pickle.loads(pickled_class)\n","\u001b[2m\u001b[36m(pid=389)\u001b[0m ModuleNotFoundError: No module named 'multi_process_funcs'\n"],"name":"stderr"}]},{"cell_type":"markdown","metadata":{"id":"pwjxzVsJOAG0"},"source":["普通にコンストラクト時に失敗"]},{"cell_type":"markdown","metadata":{"id":"QfylrjZzOUbN"},"source":["#### 2.ray.remoteのデコレート＋インポートあり＋参照関数内インポートなし"]},{"cell_type":"markdown","metadata":{"id":"EcWaYldVOmah"},"source":["各メソッド内に利用するすべてのモジュール・関数のパスを通しインポートを\r\n","行う．ただし，利用する関数がjupyter内で定義されている場合に，その中で利用するモジュール等のインポートを特別に行っていない"]},{"cell_type":"code","metadata":{"id":"YmPRGFG-gAk5","executionInfo":{"status":"ok","timestamp":1611881341898,"user_tz":-540,"elapsed":618,"user":{"displayName":"Naoto Asami","photoUrl":"","userId":"02738946460850472304"}}},"source":["@ray.remote\r\n","class RaySimpleEnv2():\r\n","    def __init__(self):\r\n","        self.init_number = None\r\n","\r\n","    def reset(self):\r\n","        import numpy as np\r\n","        import sys\r\n","        sys.path.append(\"/content/gdrive/MyDrive/ray_multiprocess_env\")\r\n","        import multi_process_funcs\r\n","        from multi_process_funcs import identiti_func, identiti_func2\r\n","    \r\n","        self.init_number = np.random.randint(0,100, size=(1,))\r\n","        return identiti_func4_without_import(identiti_func3(identiti_func2(identiti_func(self.init_number))))\r\n","\r\n","    def step(self, action):\r\n","        self.init_number += action\r\n","        return self.init_number, 0, False, None "],"execution_count":16,"outputs":[]},{"cell_type":"code","metadata":{"id":"SsV3-pFrPE4S","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1611881345116,"user_tz":-540,"elapsed":1969,"user":{"displayName":"Naoto Asami","photoUrl":"","userId":"02738946460850472304"}},"outputId":"51d82020-c644-467f-cc84-f736f304d28f"},"source":["remote_env = RaySimpleEnv2.remote()"],"execution_count":17,"outputs":[{"output_type":"stream","text":["2021-01-29 00:49:03,431\tWARNING worker.py:1034 -- Failed to unpickle actor class 'RaySimpleEnv2' for actor ID cb230a5701000000. Traceback:\n","Traceback (most recent call last):\n","  File \"/usr/local/lib/python3.6/dist-packages/ray/function_manager.py\", line 496, in _load_actor_class_from_gcs\n","    actor_class = pickle.loads(pickled_class)\n","ModuleNotFoundError: No module named 'multi_process_funcs'\n","\n","\u001b[2m\u001b[36m(pid=388)\u001b[0m 2021-01-29 00:49:03,422\tERROR function_manager.py:498 -- Failed to load actor class RaySimpleEnv2.\n","\u001b[2m\u001b[36m(pid=388)\u001b[0m Traceback (most recent call last):\n","\u001b[2m\u001b[36m(pid=388)\u001b[0m   File \"/usr/local/lib/python3.6/dist-packages/ray/function_manager.py\", line 496, in _load_actor_class_from_gcs\n","\u001b[2m\u001b[36m(pid=388)\u001b[0m     actor_class = pickle.loads(pickled_class)\n","\u001b[2m\u001b[36m(pid=388)\u001b[0m ModuleNotFoundError: No module named 'multi_process_funcs'\n"],"name":"stderr"}]},{"cell_type":"markdown","metadata":{"id":"ilrJATOFPJcf"},"source":["普通にコンストラクト自に失敗"]},{"cell_type":"markdown","metadata":{"id":"CufEqLC6PYm-"},"source":["#### 3.ray.remoteのデコレート＋インポートあり＋参照関数内インポートあり"]},{"cell_type":"code","metadata":{"id":"zA1dUA2qPQVE","executionInfo":{"status":"ok","timestamp":1611881351962,"user_tz":-540,"elapsed":750,"user":{"displayName":"Naoto Asami","photoUrl":"","userId":"02738946460850472304"}}},"source":["@ray.remote\r\n","class RaySimpleEnv3():\r\n","    def __init__(self):\r\n","        self.init_number = None\r\n","\r\n","    def reset(self):\r\n","        import numpy as np\r\n","        import sys\r\n","        sys.path.append(\"/content/gdrive/MyDrive/ray_multiprocess_env\")\r\n","        import multi_process_funcs\r\n","        from multi_process_funcs import identiti_func, identiti_func2\r\n","    \r\n","        self.init_number = np.random.randint(0,100, size=(1,))\r\n","        return identiti_func4_with_import(identiti_func3(identiti_func2(identiti_func(self.init_number))))\r\n","\r\n","    def step(self, action):\r\n","        self.init_number += action\r\n","        return self.init_number, 0, False, None "],"execution_count":18,"outputs":[]},{"cell_type":"code","metadata":{"id":"cWX2fY1RPjyq","executionInfo":{"status":"ok","timestamp":1611881355573,"user_tz":-540,"elapsed":936,"user":{"displayName":"Naoto Asami","photoUrl":"","userId":"02738946460850472304"}}},"source":["remote_env = RaySimpleEnv3.remote()"],"execution_count":19,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"2cIIba3WPonJ","executionInfo":{"status":"ok","timestamp":1611881357406,"user_tz":-540,"elapsed":890,"user":{"displayName":"Naoto Asami","photoUrl":"","userId":"02738946460850472304"}},"outputId":"85039ea5-cdfa-49d7-9be2-889ce856af5d"},"source":["id = remote_env.reset.remote()\r\n","ray.get(id)"],"execution_count":20,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([21])"]},"metadata":{"tags":[]},"execution_count":20}]},{"cell_type":"markdown","metadata":{"id":"ToIEwpLwQ3JE"},"source":["やっとできた．このことから，ray.remoteでデコレートするすべてのメソッドの最初で利用するモジュール・関数のインポートを行い，さらにjupyter内で定義した全ての関数(クラスのメソッド)の最初で利用するモジュール・関数のインポートを行う必要がある．"]},{"cell_type":"markdown","metadata":{"id":"7dYEar2WRxmC"},"source":["#### 4.3.のクラスと同等のクラスをデコレートでなく継承"]},{"cell_type":"code","metadata":{"id":"tFWmKRw3IQzS","executionInfo":{"status":"ok","timestamp":1611881363320,"user_tz":-540,"elapsed":710,"user":{"displayName":"Naoto Asami","photoUrl":"","userId":"02738946460850472304"}}},"source":["@ray.remote\r\n","class RaySimpleEnv4(SimpleEnv2):\r\n","    pass"],"execution_count":21,"outputs":[]},{"cell_type":"code","metadata":{"id":"PbSMVccfSmff","executionInfo":{"status":"ok","timestamp":1611881364890,"user_tz":-540,"elapsed":759,"user":{"displayName":"Naoto Asami","photoUrl":"","userId":"02738946460850472304"}}},"source":["remote_env = RaySimpleEnv4.remote()"],"execution_count":22,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"aiyS5tu0Sqfz","executionInfo":{"status":"ok","timestamp":1611881366519,"user_tz":-540,"elapsed":748,"user":{"displayName":"Naoto Asami","photoUrl":"","userId":"02738946460850472304"}},"outputId":"302c933d-3661-4a9e-e3fd-4e9288df8cd2"},"source":["id = remote_env.reset.remote()\r\n","ray.get(id)"],"execution_count":23,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([71])"]},"metadata":{"tags":[]},"execution_count":23}]},{"cell_type":"markdown","metadata":{"id":"d4TgFlz1S60A"},"source":["うまく行った．これで普通に利用する場合とリモートで利用する場合を分離できる．\r\n"]},{"cell_type":"markdown","metadata":{"id":"1oIHKym9TM0W"},"source":["#### 5.ファイルから読み込んだクラスの継承"]},{"cell_type":"code","metadata":{"id":"6-lR_gd8TIfF","executionInfo":{"status":"ok","timestamp":1611881372228,"user_tz":-540,"elapsed":729,"user":{"displayName":"Naoto Asami","photoUrl":"","userId":"02738946460850472304"}}},"source":["@ray.remote\r\n","class RaySimpleEnv5(SimpleEnvScript):\r\n","    pass"],"execution_count":24,"outputs":[]},{"cell_type":"code","metadata":{"id":"Pw7_kRlyTzgX","executionInfo":{"status":"ok","timestamp":1611881373663,"user_tz":-540,"elapsed":621,"user":{"displayName":"Naoto Asami","photoUrl":"","userId":"02738946460850472304"}}},"source":["remote_env = RaySimpleEnv5.remote()"],"execution_count":25,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":416},"id":"4QBZElYZCqQr","executionInfo":{"status":"error","timestamp":1611881375394,"user_tz":-540,"elapsed":781,"user":{"displayName":"Naoto Asami","photoUrl":"","userId":"02738946460850472304"}},"outputId":"b6545df4-dd32-458b-89c5-c390ac000c95"},"source":["id = remote_env.reset.remote()\r\n","ray.get(id)"],"execution_count":26,"outputs":[{"output_type":"error","ename":"RayTaskError(RuntimeError)","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mRayTaskError(RuntimeError)\u001b[0m                Traceback (most recent call last)","\u001b[0;32m<ipython-input-26-c128bbbf5cb6>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0mid\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mremote_env\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mreset\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mremote\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 2\u001b[0;31m \u001b[0mray\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mget\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mid\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;32m/usr/local/lib/python3.6/dist-packages/ray/worker.py\u001b[0m in \u001b[0;36mget\u001b[0;34m(object_refs, timeout)\u001b[0m\n\u001b[1;32m   1377\u001b[0m                     \u001b[0mworker\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcore_worker\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdump_object_store_memory_usage\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1378\u001b[0m                 \u001b[0;32mif\u001b[0m \u001b[0misinstance\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mvalue\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mRayTaskError\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1379\u001b[0;31m                     \u001b[0;32mraise\u001b[0m \u001b[0mvalue\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mas_instanceof_cause\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1380\u001b[0m                 \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1381\u001b[0m                     \u001b[0;32mraise\u001b[0m \u001b[0mvalue\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mRayTaskError(RuntimeError)\u001b[0m: \u001b[36mray::RaySimpleEnv5.reset()\u001b[39m (pid=495, ip=172.28.0.2)\n  File \"python/ray/_raylet.pyx\", line 422, in ray._raylet.execute_task\n  File \"python/ray/_raylet.pyx\", line 456, in ray._raylet.execute_task\n  File \"python/ray/_raylet.pyx\", line 459, in ray._raylet.execute_task\n  File \"python/ray/_raylet.pyx\", line 463, in ray._raylet.execute_task\n  File \"python/ray/_raylet.pyx\", line 415, in ray._raylet.execute_task.function_executor\nRuntimeError: The actor with name RaySimpleEnv5 failed to be imported, and so cannot execute this method."]}]},{"cell_type":"markdown","metadata":{"id":"VvX2qXVrT46J"},"source":["普通に無理，つまりray.remoteで定義するクラスを何かのサブクラスにしたい場合，jupyter内で定義し直す必要がある．\r\n"]},{"cell_type":"markdown","metadata":{"id":"JDhO3YFwUkDf"},"source":["#### 6.インポート無しクラスのコンポジション＋インポート"]},{"cell_type":"code","metadata":{"id":"19U0IK_kUzxY","executionInfo":{"status":"ok","timestamp":1611881380664,"user_tz":-540,"elapsed":776,"user":{"displayName":"Naoto Asami","photoUrl":"","userId":"02738946460850472304"}}},"source":["@ray.remote\r\n","class RaySimpleEnv6():\r\n","    def __init__(self, *args, **kwargs):\r\n","        self.simple_env = SimpleEnv(*args, **kwargs)\r\n","\r\n","    def reset(self, *args, **kwargs):\r\n","        import numpy as np\r\n","        import sys\r\n","        sys.path.append(\"/content/gdrive/MyDrive/ray_multiprocess_env\")\r\n","        import multi_process_funcs\r\n","        from multi_process_funcs import identiti_func, identiti_func2\r\n","\r\n","        return self.simple_env.reset(*args,**kwargs)\r\n","\r\n","    def step(self, *args, **kwargs):\r\n","        return self.simple_env.step(*args,**kwargs)"],"execution_count":27,"outputs":[]},{"cell_type":"code","metadata":{"id":"BFcbWRw1Vj8d","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1611881382366,"user_tz":-540,"elapsed":942,"user":{"displayName":"Naoto Asami","photoUrl":"","userId":"02738946460850472304"}},"outputId":"aac58afb-3728-449a-f450-7f8c0536367c"},"source":["remote_env = RaySimpleEnv6.remote()"],"execution_count":28,"outputs":[{"output_type":"stream","text":["2021-01-29 00:49:41,729\tWARNING worker.py:1034 -- Failed to unpickle actor class 'RaySimpleEnv6' for actor ID 62223d8501000000. Traceback:\n","Traceback (most recent call last):\n","  File \"/usr/local/lib/python3.6/dist-packages/ray/function_manager.py\", line 496, in _load_actor_class_from_gcs\n","    actor_class = pickle.loads(pickled_class)\n","ModuleNotFoundError: No module named 'multi_process_funcs'\n","\n","\u001b[2m\u001b[36m(pid=494)\u001b[0m 2021-01-29 00:49:41,720\tERROR function_manager.py:498 -- Failed to load actor class RaySimpleEnv6.\n","\u001b[2m\u001b[36m(pid=494)\u001b[0m Traceback (most recent call last):\n","\u001b[2m\u001b[36m(pid=494)\u001b[0m   File \"/usr/local/lib/python3.6/dist-packages/ray/function_manager.py\", line 496, in _load_actor_class_from_gcs\n","\u001b[2m\u001b[36m(pid=494)\u001b[0m     actor_class = pickle.loads(pickled_class)\n","\u001b[2m\u001b[36m(pid=494)\u001b[0m ModuleNotFoundError: No module named 'multi_process_funcs'\n"],"name":"stderr"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":416},"id":"jucVfcsXVn--","executionInfo":{"status":"error","timestamp":1611881385397,"user_tz":-540,"elapsed":726,"user":{"displayName":"Naoto Asami","photoUrl":"","userId":"02738946460850472304"}},"outputId":"601997e8-b6ad-4748-83ce-514f449f1822"},"source":["id = remote_env.reset.remote()\r\n","ray.get(id)"],"execution_count":29,"outputs":[{"output_type":"error","ename":"RayTaskError(RuntimeError)","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mRayTaskError(RuntimeError)\u001b[0m                Traceback (most recent call last)","\u001b[0;32m<ipython-input-29-c128bbbf5cb6>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0mid\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mremote_env\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mreset\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mremote\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 2\u001b[0;31m \u001b[0mray\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mget\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mid\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;32m/usr/local/lib/python3.6/dist-packages/ray/worker.py\u001b[0m in \u001b[0;36mget\u001b[0;34m(object_refs, timeout)\u001b[0m\n\u001b[1;32m   1377\u001b[0m                     \u001b[0mworker\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcore_worker\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdump_object_store_memory_usage\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1378\u001b[0m                 \u001b[0;32mif\u001b[0m \u001b[0misinstance\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mvalue\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mRayTaskError\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1379\u001b[0;31m                     \u001b[0;32mraise\u001b[0m \u001b[0mvalue\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mas_instanceof_cause\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1380\u001b[0m                 \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1381\u001b[0m                     \u001b[0;32mraise\u001b[0m \u001b[0mvalue\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mRayTaskError(RuntimeError)\u001b[0m: \u001b[36mray::RaySimpleEnv6.reset()\u001b[39m (pid=494, ip=172.28.0.2)\n  File \"python/ray/_raylet.pyx\", line 422, in ray._raylet.execute_task\n  File \"python/ray/_raylet.pyx\", line 456, in ray._raylet.execute_task\n  File \"python/ray/_raylet.pyx\", line 459, in ray._raylet.execute_task\n  File \"python/ray/_raylet.pyx\", line 463, in ray._raylet.execute_task\n  File \"python/ray/_raylet.pyx\", line 415, in ray._raylet.execute_task.function_executor\nRuntimeError: The actor with name RaySimpleEnv6 failed to be imported, and so cannot execute this method."]}]},{"cell_type":"markdown","metadata":{"id":"jeQeWIf6WBhm"},"source":["もちろんこれは失敗する．これは2が失敗する理由と同じで，jupyter内で定義したクラスもメソッドの最初にinportが必要になるためである．"]},{"cell_type":"markdown","metadata":{"id":"bSOno6ueWWjX"},"source":["#### 7.ファイルから読み込んだクラスのコンポジション+インポート"]},{"cell_type":"code","metadata":{"id":"INeDb28YWfqT","executionInfo":{"status":"ok","timestamp":1611881394441,"user_tz":-540,"elapsed":736,"user":{"displayName":"Naoto Asami","photoUrl":"","userId":"02738946460850472304"}}},"source":["@ray.remote\r\n","class RaySimpleEnv7():\r\n","    def __init__(self, *args, **kwargs):\r\n","        import sys\r\n","        sys.path.append(\"/content/gdrive/MyDrive/ray_multiprocess_env\")\r\n","        import multi_process_funcs\r\n","        from multi_process_funcs import SimpleEnvScript\r\n","        self.simple_env = SimpleEnvScript(*args, **kwargs)\r\n","\r\n","    def reset(self, *args, **kwargs):\r\n","        return self.simple_env.reset(*args,**kwargs)\r\n","\r\n","    def step(self, *args, **kwargs):\r\n","        return self.simple_env.step(*args,**kwargs)"],"execution_count":30,"outputs":[]},{"cell_type":"code","metadata":{"id":"KZIsWpImW5sy","executionInfo":{"status":"ok","timestamp":1611881396096,"user_tz":-540,"elapsed":694,"user":{"displayName":"Naoto Asami","photoUrl":"","userId":"02738946460850472304"}}},"source":["remote_env = RaySimpleEnv7.remote()"],"execution_count":31,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"EFK6chxoXFs5","executionInfo":{"status":"ok","timestamp":1611881397669,"user_tz":-540,"elapsed":652,"user":{"displayName":"Naoto Asami","photoUrl":"","userId":"02738946460850472304"}},"outputId":"a5d4c0b7-c885-4cf3-b688-b63da3cf6f91"},"source":["id = remote_env.reset.remote()\r\n","ray.get(id)"],"execution_count":32,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([71])"]},"metadata":{"tags":[]},"execution_count":32}]},{"cell_type":"markdown","metadata":{"id":"2TS99x0bXy-_"},"source":["これは成功する．つまり，ファイルで定義されたクラスをremote化したい場合は，コンポジションが適している．その場合，コンストラクタで適当にインポートを行う必要がある．"]},{"cell_type":"markdown","metadata":{"id":"Uj23wrW4cyHZ"},"source":["#### おまけ"]},{"cell_type":"markdown","metadata":{"id":"gtmuiuTZJpVj"},"source":["ファイルで定義されたクラスをremote化する関数．アクターとなるクラスを元のクラスのコンポジションとして定義するため，コンストラクタのみ実装する．"]},{"cell_type":"code","metadata":{"id":"dwI5-UtrdUpX","executionInfo":{"status":"ok","timestamp":1611881402312,"user_tz":-540,"elapsed":777,"user":{"displayName":"Naoto Asami","photoUrl":"","userId":"02738946460850472304"}}},"source":["class RaySimpleEnvAppendix():\r\n","    def __init__(self, *args, **kwargs):\r\n","        import sys\r\n","        sys.path.append(\"/content/gdrive/MyDrive/ray_multiprocess_env\")\r\n","        import multi_process_funcs\r\n","        from multi_process_funcs import SimpleEnvScript\r\n","        self.simple_env = SimpleEnvScript(*args, **kwargs)\r\n","\r\n","\r\n","\r\n","# インスタンスのメソッドをコンポジションのものに移譲する関数を出力\r\n","def make_method(composition_name, func_name):\r\n","    def inner_func(self, *args, **kwargs):\r\n","        composition_object = getattr(self, composition_name)  # self.\"composition_name\"\r\n","        composition_object_func = getattr(composition_object, func_name) \r\n","        return composition_object_func(*args, **kwargs)  # self.\"composition_name\".\"func_name\"(*args, **kwargs)\r\n","    return inner_func\r\n","\r\n","# インスタンスにメソッドを追加するクラス\r\n","\r\n","import inspect\r\n","\r\n","def delegation_all_method(cls, composition_name, composition_cls):\r\n","    for name, _ in inspect.getmembers(composition_cls):\r\n","        if name.startswith('__'):\r\n","            continue\r\n","        if callable(getattr(composition_cls, name)):\r\n","            set_func = make_method(composition_name, name)\r\n","            setattr(cls, name, set_func) \r\n","\r\n","\r\n","# 以上をまとめて，jupyterで利用できるリモート化できるクラスの作成関数\r\n","def make_remote_class(cls, composition_name, composition_cls):\r\n","    delegation_all_method(cls, composition_name, composition_cls)\r\n","    cls = ray.remote(cls)\r\n","    return cls"],"execution_count":33,"outputs":[]},{"cell_type":"code","metadata":{"id":"iQcxqf2trsNQ","executionInfo":{"status":"ok","timestamp":1611881405840,"user_tz":-540,"elapsed":812,"user":{"displayName":"Naoto Asami","photoUrl":"","userId":"02738946460850472304"}}},"source":["RaySimpleEnvAppendix = make_remote_class(RaySimpleEnvAppendix, \"simple_env\", SimpleEnvScript)"],"execution_count":34,"outputs":[]},{"cell_type":"code","metadata":{"id":"MqfibPfvvpLu","executionInfo":{"status":"ok","timestamp":1611881407343,"user_tz":-540,"elapsed":706,"user":{"displayName":"Naoto Asami","photoUrl":"","userId":"02738946460850472304"}}},"source":["remote_env = RaySimpleEnvAppendix.remote()"],"execution_count":35,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"8LO3RemRvuN3","executionInfo":{"status":"ok","timestamp":1611881408607,"user_tz":-540,"elapsed":523,"user":{"displayName":"Naoto Asami","photoUrl":"","userId":"02738946460850472304"}},"outputId":"1ef4c1ac-8fea-4d77-d16d-faf3af7645d4"},"source":["id = remote_env.reset.remote()\r\n","ray.get(id)"],"execution_count":36,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([9])"]},"metadata":{"tags":[]},"execution_count":36}]},{"cell_type":"markdown","metadata":{"id":"wH3mw0oXPMmV"},"source":["### スクリプトでリモート化した場合"]},{"cell_type":"code","metadata":{"id":"ezbTLTUsPUtV","executionInfo":{"status":"ok","timestamp":1611881411539,"user_tz":-540,"elapsed":1095,"user":{"displayName":"Naoto Asami","photoUrl":"","userId":"02738946460850472304"}}},"source":["import ray_import_tutorial_script\r\n","from ray_import_tutorial_script import RaySimpleEnvScript"],"execution_count":37,"outputs":[]},{"cell_type":"code","metadata":{"id":"FK8_JoibVXH1","executionInfo":{"status":"ok","timestamp":1611881414726,"user_tz":-540,"elapsed":785,"user":{"displayName":"Naoto Asami","photoUrl":"","userId":"02738946460850472304"}}},"source":["remote_env = RaySimpleEnvScript.remote()"],"execution_count":38,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":416},"id":"6CPRqIUCDK8t","executionInfo":{"status":"error","timestamp":1611881417381,"user_tz":-540,"elapsed":782,"user":{"displayName":"Naoto Asami","photoUrl":"","userId":"02738946460850472304"}},"outputId":"6313ca7d-5643-483e-dc8b-eb522dd8d0db"},"source":["id = remote_env.reset.remote()\r\n","ray.get(id)"],"execution_count":39,"outputs":[{"output_type":"error","ename":"RayTaskError(RuntimeError)","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mRayTaskError(RuntimeError)\u001b[0m                Traceback (most recent call last)","\u001b[0;32m<ipython-input-39-c128bbbf5cb6>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0mid\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mremote_env\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mreset\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mremote\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 2\u001b[0;31m \u001b[0mray\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mget\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mid\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;32m/usr/local/lib/python3.6/dist-packages/ray/worker.py\u001b[0m in \u001b[0;36mget\u001b[0;34m(object_refs, timeout)\u001b[0m\n\u001b[1;32m   1377\u001b[0m                     \u001b[0mworker\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcore_worker\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdump_object_store_memory_usage\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1378\u001b[0m                 \u001b[0;32mif\u001b[0m \u001b[0misinstance\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mvalue\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mRayTaskError\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1379\u001b[0;31m                     \u001b[0;32mraise\u001b[0m \u001b[0mvalue\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mas_instanceof_cause\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1380\u001b[0m                 \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1381\u001b[0m                     \u001b[0;32mraise\u001b[0m \u001b[0mvalue\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mRayTaskError(RuntimeError)\u001b[0m: \u001b[36mray::RaySimpleEnvScript.reset()\u001b[39m (pid=572, ip=172.28.0.2)\n  File \"python/ray/_raylet.pyx\", line 422, in ray._raylet.execute_task\n  File \"python/ray/_raylet.pyx\", line 456, in ray._raylet.execute_task\n  File \"python/ray/_raylet.pyx\", line 459, in ray._raylet.execute_task\n  File \"python/ray/_raylet.pyx\", line 463, in ray._raylet.execute_task\n  File \"python/ray/_raylet.pyx\", line 415, in ray._raylet.execute_task.function_executor\nRuntimeError: The actor with name RaySimpleEnvScript failed to be imported, and so cannot execute this method."]}]},{"cell_type":"markdown","metadata":{"id":"aXDH4IeWgv-C"},"source":["普通にできない．どうやらjupyterでrayをクラスに\r\n","適用するためには，コンポジションするのが前提になりそう．"]},{"cell_type":"code","metadata":{"id":"foVpvMc1okgX","executionInfo":{"status":"ok","timestamp":1611881425613,"user_tz":-540,"elapsed":678,"user":{"displayName":"Naoto Asami","photoUrl":"","userId":"02738946460850472304"}}},"source":["env_number = 10\r\n","#remote_envs = [RaySimpleEnv.remote() for _ in range(env_number)]\r\n","#remote_envs = [RaySimpleEnv2.remote() for _ in range(env_number)]\r\n","remote_envs = [RaySimpleEnv3.remote() for _ in range(env_number)]"],"execution_count":40,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"RA1OYnEml8oL"},"source":["### マルチプロセスの環境\r\n"]},{"cell_type":"code","metadata":{"id":"bdSI9lBzik2I","executionInfo":{"status":"ok","timestamp":1611881429428,"user_tz":-540,"elapsed":521,"user":{"displayName":"Naoto Asami","photoUrl":"","userId":"02738946460850472304"}}},"source":["class RayVectorEnv():\r\n","    \"\"\"\r\n","    リモートの環境をまとめて一般的な環境のインターフェースを提供する．\r\n","    \"\"\"\r\n","    def __init__(self,remote_envs):\r\n","        self._remote_envs = remote_envs \r\n","\r\n","    @property\r\n","    def remote_envs(self):\r\n","        return self._remote_envs\r\n","\r\n","    def reset(self, *args, **kwargs):\r\n","        id_list = [remote_env.reset.remote(*args, **kwargs) for remote_env in self.remote_envs]\r\n","        out_list = ray.get(id_list)\r\n","        # それぞれの返り値の長さが複数かどうか\r\n","        if len(out_list) > 0:\r\n","            if isinstance(out_list[0], tuple):  # 一つの返り値が複数の場合\r\n","                return zip(*out_list)  # それぞれの出力のリストに変換(unzip)\r\n","            else:\r\n","                return out_list  # そのまま出力\r\n","        return None\r\n","\r\n","    def step(self, actions, *args, **kwargs):\r\n","        assert len(self.remote_envs) == len(actions)\r\n","        id_list = [remote_env.step.remote(action, *args, **kwargs) for remote_env, action in zip(self.remote_envs, actions)]\r\n","        out_list = ray.get(id_list)\r\n","        if len(out_list) > 0:\r\n","            if isinstance(out_list[0], tuple):  # 一つの返り値が複数の場合\r\n","                return zip(*out_list)  # それぞれの出力のリストに変換(unzip)\r\n","            else:\r\n","                return out_list  # そのまま出力\r\n","        return None"],"execution_count":41,"outputs":[]},{"cell_type":"code","metadata":{"id":"LuMPGYIGjgRi","executionInfo":{"status":"ok","timestamp":1611881432216,"user_tz":-540,"elapsed":731,"user":{"displayName":"Naoto Asami","photoUrl":"","userId":"02738946460850472304"}}},"source":["vector_envs = RayVectorEnv(remote_envs)"],"execution_count":42,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"p2Z0OTVOjpLI","executionInfo":{"status":"ok","timestamp":1611881434037,"user_tz":-540,"elapsed":922,"user":{"displayName":"Naoto Asami","photoUrl":"","userId":"02738946460850472304"}},"outputId":"745f58a8-5231-4b75-831f-14be605a4614"},"source":["vector_envs.reset()"],"execution_count":43,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[array([12]),\n"," array([92]),\n"," array([10]),\n"," array([40]),\n"," array([37]),\n"," array([31]),\n"," array([62]),\n"," array([89]),\n"," array([41]),\n"," array([68])]"]},"metadata":{"tags":[]},"execution_count":43}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"8py9EAIPpypD","executionInfo":{"status":"ok","timestamp":1611881482024,"user_tz":-540,"elapsed":836,"user":{"displayName":"Naoto Asami","photoUrl":"","userId":"02738946460850472304"}},"outputId":"e9cca207-2f6a-428e-c8ae-897da46a0f70"},"source":["obs, reward, done, info = vector_envs.step([10]*env_number)\r\n","obs, reward, done, info"],"execution_count":46,"outputs":[{"output_type":"execute_result","data":{"text/plain":["((array([42]),\n","  array([122]),\n","  array([40]),\n","  array([70]),\n","  array([67]),\n","  array([61]),\n","  array([92]),\n","  array([119]),\n","  array([71]),\n","  array([98])),\n"," (0, 0, 0, 0, 0, 0, 0, 0, 0, 0),\n"," (False, False, False, False, False, False, False, False, False, False),\n"," (None, None, None, None, None, None, None, None, None, None))"]},"metadata":{"tags":[]},"execution_count":46}]},{"cell_type":"code","metadata":{"id":"SnpbRFXyp43X","executionInfo":{"status":"ok","timestamp":1611881488396,"user_tz":-540,"elapsed":2994,"user":{"displayName":"Naoto Asami","photoUrl":"","userId":"02738946460850472304"}}},"source":["ray.shutdown()"],"execution_count":47,"outputs":[]},{"cell_type":"code","metadata":{"id":"E54ddOqTa7Xq"},"source":[""],"execution_count":null,"outputs":[]}]}